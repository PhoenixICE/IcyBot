// Generated by Xamasoft JSON Class Generator
// http://www.xamasoft.com/json-class-generator

using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace IcyBot
{
    public class UnlockCond
    {
        [JsonProperty("next_id")]
        public string NextId { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("type_target")]
        public string TypeTarget { get; set; }

        [JsonProperty("type_text")]
        public string TypeText { get; set; }

        [JsonProperty("type_value")]
        public int? TypeValue { get; set; }
    }

    public class Cost
    {

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("value")]
        public int Value { get; set; }
    }
    public class Function
    {

        [JsonProperty("duration")]
        public double Duration { get; set; }

        [JsonProperty("vfx")]
        public string Vfx { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("value")]
        public double Value { get; set; }

        [JsonProperty("target")]
        public string Target { get; set; }

        [JsonProperty("skill.power")]
        public int? SkillPower { get; set; }

        [JsonProperty("skill.name")]
        public string SkillName { get; set; }

        [JsonProperty("avatar.character")]
        public string AvatarCharacter { get; set; }

        [JsonProperty("avatar.weapon")]
        public string AvatarWeapon { get; set; }

        [JsonProperty("avatar.size")]
        public double? AvatarSize { get; set; }

        [JsonProperty("value.target")]
        public string ValueTarget { get; set; }

        [JsonProperty("move.lock")]
        public bool? MoveLock { get; set; }
    }

    public class SkillhandlerJson
    {

        [JsonProperty("function")]
        public Function[] Function { get; set; }
    }

    public class Passive
    {

        [JsonProperty("unlockcond")]
        public UnlockCond Unlockcond { get; set; }

        [JsonProperty("speechpanel")]
        public string Speechpanel { get; set; }

        [JsonProperty("cost")]
        public Cost[] Cost { get; set; }

        [JsonProperty("desc")]
        public string Desc { get; set; }

        [JsonProperty("skillhandler_json")]
        public SkillhandlerJson SkillhandlerJson { get; set; }

        [JsonProperty("class")]
        public string Class { get; set; }

        [JsonProperty("icon")]
        public string Icon { get; set; }

        [JsonProperty("huge")]
        public double Huge { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("level")]
        public int Level { get; set; }

        [JsonProperty("bufficon")]
        public string Bufficon { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("simpledesc")]
        public string Simpledesc { get; set; }

        [JsonProperty("property")]
        public string Property { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class PassiveBase
    {

        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("passive")]
        public Passive[] Passive { get; set; }
    }

}
